(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/shaofengliu/IT/git/jcreact/example/js/App.js":[function(_dereq_,module,exports){
//捆绑模式引入依赖
// var React = require('react');
// var Router = require('react-router');
//非捆绑模式（UMD）引入依赖
var Router = ReactRouter;
var Route = Router.Route;
var RouteHandler = Router.RouteHandler;
var Nav = JcReact.Nav,
    NavItem = JcReact.NavItem;

var AppNav = React.createClass({displayName: "AppNav",
  render(){
    return(
      React.createElement(Nav, {type: "pills", justify: "true"}, 
          React.createElement(NavItem, {href: "/#/SetNav", title: "SetNav"}, "菜单类"), 
          React.createElement(NavItem, {href: "/#/SetSwitch", title: "SetSwitch"}, "切换面板类")
      )
    )
  }
})
var App = React.createClass({displayName: "App",
  render(){
    return (
      React.createElement("div", null, 
        React.createElement(AppNav, null), 
        React.createElement("h1", null, "Jcreact"), 
        React.createElement(RouteHandler, null)
      )
    );
  }
});

var SetNav = _dereq_('./SetNav');
var SetSwitch = _dereq_('./SetSwitch');

//handler值为相应的组件 
// <Route path="setswitch/:name" handler={SetSwitchName}/>

var routes = (
    React.createElement(Route, {path: "/", handler: App},
        React.createElement(Route, {path: "setnav", handler: SetNav}),
        React.createElement(Route, {path: "setswitch", handler: SetSwitch}
        )
  )
);

Router.run(routes, Router.HashLocation, function(Handler) {
    React.render(React.createElement(Handler, null), document.getElementById('body'));
});

module.exports = App;

},{"./SetNav":"/Users/shaofengliu/IT/git/jcreact/example/js/SetNav.js","./SetSwitch":"/Users/shaofengliu/IT/git/jcreact/example/js/SetSwitch.js"}],"/Users/shaofengliu/IT/git/jcreact/example/js/SetNav.js":[function(_dereq_,module,exports){
'use strict';
//CommonJs 方式
// var J = require('../../src/Jcreact'),
//     Nav = J.Nav,
//     NavItem = J.NavItem,
//     Switch = J.Switch,
//     Pane = J.Pane; //全局方式

// 全局方式
var Nav = JcReact.Nav,
    NavItem = JcReact.NavItem;
var SetNav = React.createClass({displayName: "SetNav",
    render: function(){
        return React.createElement("div", null, 
            React.createElement(Nav, {type: "tabs"}, 
                React.createElement(NavItem, {href: "/test.html", title: "test it", active: true}, "abc"), 
                React.createElement(NavItem, {href: "/test2.html", title: "test it"}, "abc123"), 
                React.createElement(NavItem, {href: "/test3.html", title: "test it2", disabled: true}, "abc123")
            ), 
            React.createElement(Nav, {type: "pills", justify: "true"}, 
                React.createElement(NavItem, {href: "/test.html", title: "test it", active: true}, "abc"), 
                React.createElement(NavItem, {href: "/test2.html", title: "test it"}, "abc123"), 
                React.createElement(NavItem, {href: "/test3.html", title: "test it2", disabled: true}, "abc123")
            ), 
            React.createElement(Nav, {type: "side"}, 
                React.createElement(NavItem, {href: "/test.html", header: "true", active: true, title: "test it"}, "abc"), 
                React.createElement(NavItem, {href: "/test2.html", title: "test it"}, "abc123"), 
                React.createElement(NavItem, {divider: true}), 
                React.createElement(NavItem, {href: "/test3.html", title: "test it2", disabled: true}, "abc123")
            ), 
            React.createElement(Nav, {type: "breadcrumb"}, 
                React.createElement(NavItem, {href: "/test.html", title: "test it", disabled: true}, "abc"), 
                React.createElement(NavItem, {href: "/test2.html", title: "test it"}, "abc123"), 
                React.createElement(NavItem, {href: "/test3.html", title: "test it2"}, "abc123")
            ), 
            React.createElement(Nav, {type: "list"}, 
                React.createElement(NavItem, {href: "/test.html", title: "test it", disabled: true}, "每个人都有一个死角， 自己走不出来，别人也闯不进去。"), 
                React.createElement(NavItem, {href: "/test2.html", title: "test it"}, "我把最深沉的秘密放在那里。"), 
                React.createElement(NavItem, {href: "/test3.html", title: "test it2"}, "你不懂我，我不怪你.")
            ), 
            React.createElement(Nav, {type: "pagination"}, 
                React.createElement(NavItem, {disabled: true, href: "#"}, "«"), 
                React.createElement(NavItem, {active: true}, "1"), 
                React.createElement(NavItem, {href: "#"}, "2"), 
                React.createElement(NavItem, {href: "#"}, "3"), 
                React.createElement(NavItem, {href: "#"}, "4"), 
                React.createElement(NavItem, {href: "#"}, "5"), 
                React.createElement(NavItem, {href: "#"}, "»")
            )
        )
    }
});

module.exports = SetNav;

},{}],"/Users/shaofengliu/IT/git/jcreact/example/js/SetSwitch.js":[function(_dereq_,module,exports){
'use strict';

var Switch = JcReact.Switch,
    Pane = JcReact.Pane; 

var SetSwitch = React.createClass({displayName: "SetSwitch",
    render: function(){
        return React.createElement("div", null, 
            React.createElement(Pane, {title: "test1", color: "warning", collapse: "true"}, "test1Content"), 
            React.createElement(Switch, {type: "pane"}, React.createElement(Pane, {title: "test1"}, "test1Content"), React.createElement(Pane, {title: "test2"}, "test2Content")), 
            React.createElement(Switch, {type: "tab"}, React.createElement(Pane, {title: "test1"}, "test1Content"), React.createElement(Pane, {title: "test2"}, "test2Content")), 
            React.createElement(Switch, {type: "slide"}, 
                React.createElement(Pane, {title: "test1"}, 
                    React.createElement("img", {src: "../imgs/test.jpg"})
                ), 
                React.createElement(Pane, {title: "test2"}, 
                    React.createElement("img", {src: "../imgs/test2.jpg"})
                )
            )
        )
    }
});

module.exports = SetSwitch;

},{}]},{},["/Users/shaofengliu/IT/git/jcreact/example/js/App.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
